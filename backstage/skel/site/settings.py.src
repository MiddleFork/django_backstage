### DO NOT EDIT THIS FILE ###
### store site specific settings 
### in local_settings.py
#############################
PROJECT_NAME = 'dosie'
import os,sys

#e.g. /data/www/dosie/sites/fatmaps
LOCAL_PATH = os.path.dirname(os.path.abspath(__file__)) 
if not LOCAL_PATH in sys.path:
    sys.path.insert(0,LOCAL_PATH)

#e.g. /data/www/dosie/sites
PARENT_PATH = os.path.dirname(LOCAL_PATH)
if os.path.basename(PARENT_PATH) == 'sites':
    SITE_NAME = os.path.basename(LOCAL_PATH)
    ROOT_URLCONF = SITE_NAME + '.urls'
    if not PARENT_PATH in sys.path:
        sys.path.insert(1,PARENT_PATH)

#e.g. /data/www/dosie
GRANDPARENT_PATH = os.path.dirname(PARENT_PATH)

#is the project nickname found on the site path?
if LOCAL_PATH.find(PROJECT_NAME) > -1:
    try:
        possible_root,possible_project = os.path.split(GRANDPARENT_PATH)
        if possible_project == PROJECT_NAME:
            #Add the possible_root to the sys.path
            if not possible_root in sys.path:
                sys.path.insert(1,possible_root)
	    s='from ' + PROJECT_NAME + '.settings import *'
	    exec(s)
            TEMPLATE_DIRS = [
                os.path.join(LOCAL_PATH,'templates'),] + TEMPLATE_DIRS
    except:
        raise

# add the site's site folder to installed apps:
# bump the site to the top of installed apps
if not '%s.site' % (SITE_NAME) in INSTALLED_APPS:
    #exec("INSTALLED_APPS.append('" + SITE_NAME + ".site')")
    INSTALLED_APPS.insert(0,SITE_NAME)

# set the MEDIA_URL by extending the value from static_settings
MEDIA_URL = MEDIA_URL + 'site/%s/' % SITE_NAME
# set the MEDIA_ROOT as an absolute file path
MEDIA_ROOT = MEDIA_ROOT_BASE + '%s/' % SITE_NAME

#set a prefix for the cache
if len(CACHES) > 0:
    CACHES['default']['KEY_PREFIX'] = SITE_NAME

# site settings are generated and shouldn't be edited.
from site_settings import *

# local settings are unique within each site and are manually edited
# they are imported after site_settings and over-ride those
try: 
    from local_settings import *
except:
    pass #file not found

# import the theme settings, and add it to the TEMPLATE_DIRS                                           # it should end up second in the list behind the site templates 
try:
    from theme_settings import MAINTHEME
    if MAINTHEME is None:
        MAINTHEME = 'default'
    TEMPLATE_DIRS.insert(1,(os.path.join(PROJECT_ROOT,'project/themes',MAINTHEME,'templates')))
except:
    raise

# add any site apps to the installed apps, if they exist
if os.path.exists(os.path.join(LOCAL_PATH,'site_apps.py')):
    from site_apps import SITE_APPS
    for appname in SITE_APPS:
        app = '%s.%s' % (SITE_NAME,appname)
        if not app in INSTALLED_APPS:
            exec("INSTALLED_APPS.append('%s')" % (app))


# stuff below depends on the local settings

#add the site database to the databases dict
if SITE_DB <> 'None' and SITE_DB is not None:
    DATABASES['site'] = {
         'NAME':SITE_DB,'ENGINE':DBENGINE,'HOST':DBHOST,
         'PORT':DBPORT,'USER':DBUSER,'PASSWORD':DBPASS}

#bump the path to the theme to the top of the apps list,
#guaranteeing its templates will be used first
#if MAINTHEME is None:
#    MAINTHEME = 'default'
#themedot = PROJECT_NAME + '.themes.' + MAINTHEME
#INSTALLED_APPS.insert(0,themedot)
